apiVersion: v1
kind: ConfigMap
metadata:
  name: reverseproxy-nginx
  namespace: udagram
data:
  default.conf: |
    server {
      listen 80;
      location = /healthz { return 200; }

      # APIs (preserve full URI)
      location ^~ /api/v0/feed  { proxy_pass http://api-feed:8080;  proxy_http_version 1.1; proxy_set_header Connection ""; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; }
      location ^~ /api/v0/users { proxy_pass http://api-user:8080;  proxy_http_version 1.1; proxy_set_header Connection ""; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; }

      # Frontend: rewrite any hardcoded absolute URLs to relative
      location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Accept-Encoding "";   # allow body rewrite
        sub_filter_types *;
        sub_filter_once off;

        # injected at apply time below
        # sub_filter '<YOUR_OLD_ELB>/api/v0' '/api/v0';
        # sub_filter '<YOUR_OLD_ELB>'        '';

        ## placeholders; we'll replace them right after writing this file
        sub_filter '__OLD_ELB__/api/v0' '/api/v0';
        sub_filter '__OLD_ELB__'        '';
      }
    }
